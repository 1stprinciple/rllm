from dataclasses import dataclass
from typing import Dict, List, Union

@dataclass(slots=True, kw_only=True)
class Sample:
    """Represents a single sample generated by the language model.

    This class encapsulates all relevant information about a model-generated response,
    including the raw text, tokenized form, probability scores, and evaluation metrics.

    Attributes:
        response (str): The raw text response generated by the model.
        tokens (List[int]): The tokenized form of the response as integer token IDs.
        mask (List[bool]): A binary mask indicating which tokens should be included in loss computation.
            True indicates the token should be included, False indicates it should be excluded.
        log_probs (List[float]): Log probabilities for each token in the response sequence.
            These represent the model's confidence in each token prediction.
        reward (float): A scalar reward value indicating the quality of the response.
            Higher values typically indicate better responses.
        is_correct (bool): Binary indicator of response correctness based on evaluation criteria.
    """
    response: str
    tokens: List[int]
    mask: List[bool]
    log_probs: List[float]
    reward: float
    is_correct: bool


@dataclass(slots=True, kw_only=True)
class SampleBatch:
    """A batch of samples generated by the language model.

    This class groups together multiple samples along with their shared context
    and aggregate metrics.

    Attributes:
        prompt (str): The input prompt text that generated this batch of samples.
        prompt_tokens (List[int]): The tokenized form of the prompt as integer token IDs.
        samples (List[Sample]): A list of Sample objects containing the model's responses.
        metrics (Dict[str, Union[float, int]]): Aggregate metrics computed over the batch,
            such as mean reward, success rate, etc.
    """
    prompt: str
    prompt_tokens: List[int]
    samples: List[Sample]
    metrics: Dict[str, Union[float, int]]
