{% if not add_generation_prompt is defined %}
    {% set add_generation_prompt = false %}
{% endif %}

{% set ns = namespace(is_first=false, is_tool=false, is_output_first=true, system_prompt='') %}

{%- for message in messages %}
    {%- if message['role'] == 'system' %}
        {% set ns.system_prompt = message['content'] %}
        {%- if tools %}
You are a helpful assistant. You may call one or more functions to assist with the user query.

Given the following functions, please respond with a JSON for a function call with its proper arguments that best answers the given prompt.
Respond in the format {"name": function name, "parameters": dictionary of argument name and its value}. Do not use variables.

The following tools are available when needed for specific tasks:
<tools>
{%-  for tool in tools  %}
    {{-  tool | tojson }}
{%-  endfor  %}
</tools>

Only use tools when the task specifically requires their functionality.
For general questions or tasks that don't need external data, respond directly.

When using a tool, format it in the following format:
```json{\"name\": \"function_name\", \"parameters\": {\"param1\": \"value1\"}}```
If no output has been returned from the tool invocation, then realize that you have not properly returned the tool call and try again using proper formatting.
        {%- endif %}
    {%- endif %}
{%- endfor %}

{{ bos_token }}{{ ns.system_prompt }}

{%- for message in messages %}
    {%- if message['role'] == 'user' %}
        {%- set ns.is_tool = false -%}
        {{- '<｜User｜>' + message['content'] -}}
    {%- endif %}

    {%- if message['role'] == 'assistant' and message['content'] is none %}
        {%- set ns.is_tool = false -%}
        {%- for tool in message['tool_calls'] %}
            {%- if not ns.is_first %}
                {{ '<｜Assistant｜>' + tool['type'] + ' ' + tool['function']['name'] + '\n' +
                    '```json' + '\n' + tool['function']['arguments'] + '\n' + '```' + 
                    ' ' }}
                {%- set ns.is_first = true -%}
            {%- else %}
                {{ '\n' + '<｜tool▁call▁begin｜>' + tool['type'] + ' ' + tool['function']['name'] + '\n' +
                    '```json' + '\n' + tool['function']['arguments'] + '\n' + '```' +
                    ' ' }}
                {{ ' ' }}
            {%- endif %}
        {%- endfor %}
    {%- endif %}

    {%- if message['role'] == 'assistant' and message['content'] is not none %}
        {%- if ns.is_tool %}
            {{- '<｜tool▁outputs▁end｜>' + message['content'] + ' ' -}}
            {%- set ns.is_tool = false -%}
        {%- else %}
            {%- set content = message['content'] -%}
            {%- if '</think>' in content %}
                {%- set content = content.split('</think>')[-1] -%}
            {%- endif %}
            {{- '<｜Assistant｜>' + content + ' ' -}}
        {%- endif %}
    {%- endif %}

    {%- if message['role'] == 'tool' %}
        {%- set ns.is_tool = true -%}
        {%- if ns.is_output_first %}
            {{- '\nOutput from your tool call is: <｜tool▁outputs▁begin｜>' + message['content'] + ' ' }}
            {%- set ns.is_output_first = false %}
        {%- else %}
            {{ '\n' + message['content'] + ' ' }}
        {%- endif %}
    {%- endif %}
{%- endfor -%}

{% if ns.is_tool %}
    {{ '<｜tool▁outputs▁end｜>' }}
{% endif %}

{% if add_generation_prompt and not ns.is_tool %}
    {{ '<｜Assistant｜><think>\n' }}
{% endif %}
